server:
  shutdown: graceful
  tomcat:
    threads:
      max: 200 # 최대 워커 스레드 수 (default : 200)
      min-spare: 10 # 최소 유지 스레드 수 (default : 10)
    connection-timeout: 1m # 연결 타임아웃 (ms) (default : 60000ms = 1m)
    max-connections: 8192 # 최대 동시 연결 수 (default : 8192)
    accept-count: 100 # 대기 큐 크기 (default : 100)
    keep-alive-timeout: 60s # 60s
  max-http-request-header-size: 8KB
  port: 8080

spring:
  mvc.format.date: iso
  main:
    web-application-type: servlet
  threads.virtual.enabled: true
  application:
    name: commerce-api
  profiles:
    active: local
  config:
    import:
      - application-jpa.yml
      - application-redis.yml
      - application-feign.yml
      - application-resilience4j.yml
      - application-logging.yml
      - application-monitoring.yml

  task:
    execution:
      pool:
        core-size: 8
        max-size: 16
        queue-capacity: 8

springdoc:
  use-fqn: true
  swagger-ui:
    path: /swagger-ui.html

resilience4j.circuitbreaker:
  configs:
    shared:
      base-config: default
      sliding-window-size: 10
      permitted-number-of-calls-in-half-open-state: 30
      wait-duration-in-open-state: 1s
      failure-rate-threshold: 50
      event-consumer-buffer-size: 10
      ignore-exceptions:
        - org.springframework.web.client.HttpClientErrorException
        - com.loopers.support.error.BusinessException

resilience4j.retry:
  configs:
    shared:
      base-config: default
      max-attempts: 1
      ignore-exceptions:
        - org.springframework.web.client.HttpClientErrorException
        - com.loopers.support.error.BusinessException

---

spring.config.activate.on-profile: local, test

server:
  address: localhost

pg-simulator:
  store-id: ${spring.application.name}
  api-client:
    base-url: http://localhost:8082

resilience4j.circuitbreaker:
  instances:
    cb:payment-gateway:request-transaction:
      base-config: shared
    cb:payment-gateway:get-transactions:
      base-config: shared

resilience4j.timelimiter:
  instances:
    tl:payment-gateway:request-transaction:
      base-config: default
      timeout-duration: 1500ms # pg-simulator-client.read-timeout보다 크게
    tl:payment-gateway:get-transactions:
      base-config: default
      timeout-duration: 500ms

resilience4j.retry:
  instances:
    rt:payment-gateway:request-transaction:
      base-config: shared
      max-attempts: 2 # 3연속 실패 확률: 40% ^ 3 = 6.4%
    rt:payment-gateway:get-transactions:
      base-config: shared

---

spring.config.activate.on-profile: dev

---

spring.config.activate.on-profile: qa

---

spring.config.activate.on-profile: prd

springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false
